<?php
/**
 * @file
 * Code for the Farm Livestock feature.
 */

include_once 'farm_livestock.features.inc';

/**
 * Implements hook_farm_admin_actions().
 */
function farm_livestock_farm_admin_actions() {

  // Define farm area actions.
  $actions = array(
    'animal' => array(
      'title' => t('Add an animal'),
      'href' => 'farm/asset/add/animal',
      'views' => array(
        'farm_animals',
      ),
    ),
  );
  return $actions;
}

/**
 * Implements hook_farm_asset_view_views().
 */
function farm_livestock_farm_asset_view_views($farm_asset) {

  // If the entity is not an animal, bail.
  if ($farm_asset->type != 'animal') {
    return;
  }

  // Return a list of Views to include on Animals.
  return array(
    'farm_log_activity',
    'farm_log_observation',
    'farm_log_movement',
  );
}

/**
 * Implements hook_farm_taxonomy_term_view_views().
 */
function farm_livestock_farm_taxonomy_term_view_views($term) {

  // Start a list of View names.
  $views = array();

  // Switch logic depending on the vocabulary.
  switch ($term->vocabulary_machine_name) {

    // Farm areas:
    case 'farm_areas':
      $views[] = 'farm_animals';
      break;

    // Farm animal groups:
    case 'farm_animal_groups':
      $views[] = array(
        'name' => 'farm_animals',
        'arg' => 2,
      );
      break;

    // Farm animal types:
    case 'farm_animal_types':
      $views[] = array(
        'name' => 'farm_animals',
        'arg' => 3,
      );
      break;
  }

  return $views;
}

/**
 * Implements hook_farm_area_links().
 */
function farm_livestock_farm_area_links($id) {
  return array(
    array(
      'title' => t('Animals'),
      'href' => 'taxonomy/term/' . $id,
      'options' => array(
        'fragment' => 'Animals',
      ),
    ),
  );
}